<!DOCTYPE html>
<html>
  <head>
	<!--script type="text/javascript" src="js/toprow.js"></script--->
     <script type="text/javascript" src="../lib/closure/goog/base.js"></script>
  <link rel="stylesheet" href="editorCss/common.css">
  <link rel="stylesheet" href="editorCss/demo.css">
  <link rel="stylesheet" href="editorCss/menu.css">
  <link rel="stylesheet" href="editorCss/menuseparator.css">
  <link rel="stylesheet" href="editorCss/menuitem.css">
  <script>
  goog.require('goog.array');
    goog.require('goog.debug.DivConsole');
    goog.require('goog.debug.LogManager');
    goog.require('goog.events');
    goog.require('goog.object');
    goog.require('goog.ui.Menu');
    goog.require('goog.ui.MenuBarRenderer');
    goog.require('goog.ui.MenuButton');
    goog.require('goog.ui.MenuItem');
    goog.require('goog.ui.Separator');
    goog.require('goog.ui.decorate');
    goog.require('goog.ui.menuBar');
    goog.require('goog.ui.menuBarDecorator');
  </script>
<style>
    /* Base class for all icon elements. */
    .icon {
      height: 16px;
      width: 16px;
      margin: 0 1px;
      background-image: url(../images/toolbar_icons.gif);
      background-repeat: no-repeat;
      vertical-align: middle;
    }

    /* "Format" icon. */
    .format-icon {
      background-position: -64px;
    }

    .positioning-frame {
      height: 250px;
      overflow: auto;
      width: 100%;
    }

    .format-lightborder {
      border-style: solid;
      border-width: 1px;
      border-color: #ddd;
    }
  </style>
  </head>
  <body>
  <table border="0" cellpadding="0" cellspacing="4" width="100%">
    <tbody>
      <tr valign="top">

        <td width="67%">
 
        
            <table border="0" cellpadding="0" cellspacing="4"><tbody>
                <tr align="middle"><td>
      
            <div id="menubar" class="goog-menubar format-lightborder">
              <div id="FileButton" class="goog-menu-button" title="File">
                <span style="vertical-align:middle">File</span>
                <!-- This DIV will be auto-decorated with a menu. -->
                <div id="fileMenu" class="goog-menu">
                  <div class="goog-menuitem">Open</div>
                  <div class="goog-menuitem">Save</div>
                  <div class="goog-menuseparator"></div>
                  <div class="goog-menuitem">Close</div>
                </div>
              </div>
              <div id="formatButton" class="goog-menu-button"
                  title="Format">
                <!-- These elements will become the button's caption. -->
                <div class="icon format-icon goog-inline-block"></div>
                <span style="vertical-align:middle">Format</span>
                <!-- This DIV will be auto-decorated with a menu. -->
                <div id="formatMenu" class="goog-menu">
                  <div class="goog-menuitem">Bold</div>
                  <div class="goog-menuitem">Italic</div>
                  <div class="goog-menuitem">Underline</div>
                  <div class="goog-menuseparator"></div>
                  <div class="goog-menuitem goog-menuitem-disabled">
                    Strikethrough
                  </div>
                  <div class="goog-menuseparator"></div>
                  <div class="goog-menuitem">Font...</div>
                  <div class="goog-menuitem">Color...</div>
                </div>
              </div>
            </div>
            </td></tr></tbody></table>
            <br>
 
        </td>
      </tr>

    </tbody>
  </table>
  <br>

  <script>

var  buildMenu = function(rootNode) {
    var menubar = goog.ui.menuBar.create();
    var menuNames = ["File","Edit","About"];
    var menuOptions = [];
    menuOptions[0] = ['New Files', 'Open File', null, 'Exit'];
    menuOptions[1] = ['Copy', 'Paste'];
    menuOptions[2] = ['Zerg Rush!', null, 'Exit'];

    for (i in menuNames) {

      var menu = new goog.ui.Menu();
      goog.array.forEach(menuOptions[i],
        function(label) {
          var item;
          if (label) {
            item = new goog.ui.MenuItem(label + '...');
            item.setId(label);
          } else {
            item = new goog.ui.MenuSeparator();
          }
          item.setDispatchTransitionEvents(goog.ui.Component.State.ALL, true);
          menu.addItem(item);
        });


      var btn = new goog.ui.MenuButton(menuNames[i], menu);
      btn.setDispatchTransitionEvents(goog.ui.Component.State.ALL, true);
      menubar.addChild(btn, true);
      goog.events.listen(btn, EVENTS, logEvent);
    }
    menubar.render(goog.dom.getElement('menuBarProgrammatic'));
  }




  var EVENTS = goog.object.getValues(goog.ui.Component.EventType);




  buildMenu(goog.dom.getElement('menuBarProgrammatic'));

  var menubar = goog.ui.decorate(goog.dom.getElement('menubar'));


 
  </script>
  </body>
</html>
